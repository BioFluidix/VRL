// Note: "common.gradle" in the root project contains additional initialization
//   for this project. This initialization is applied in the "build.gradle"
//   of the root project.

//apply from: 'https://repository-javafx-gradle-plugin.forge.cloudbees.com/snapshot/javafx.plugin'

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
if (!hasProperty('mainClass')) {
    ext.mainClass = 'eu.mihosoft.vrl.ui.codevisualization.Main'
    mainClassName = mainClass;
}

manifest.mainAttributes("Main-Class" : ext.mainClass)

//javafx {
//    mainClass = "eu.mihosoft.vrl.ui.codevisualization.Main"
//}
//
//jfxDeploy {
//    packaging = "image"
//}

//configurations.all {
//    // check for updates every build
//    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
//}

dependencies {
    // TODO: Add dependencies here
    //   but note that JUnit should have already been added in parent.gradle.
    //   By default, only the Maven Central Repository is specified in
    //   parent.gradle.
    //
    // You can read more about how to add dependency here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:how_to_declare_your_dependencies
    

//    compile "eu.mihosoft.vrl.workflow-8.0:vworkflows-fx:0.1-r2-SNAPSHOT"
    
    compile group: 'eu.mihosoft.vrl.workflow-8.0', name: 'vworkflows-fx', version: '0.1-r2-SNAPSHOT', changing: true
    
//    compile "com.fifesoft:rsyntaxtextarea:2.5.0"
    
    compile "commons-io:commons-io:2.4"

    compile project(":VRL-Lang")
}
