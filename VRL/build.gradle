apply plugin: 'base' // To add "clean" task to the root project.

// define projects that shall not be deployed via maven
project.ext.set("skipMaven",["VRL-Lang:CommentParser","VRL-UI:NB-Sample"])

subprojects {
    apply from: rootProject.file('gradle/scripts/common.gradle')
}

// calls maven install task of all subprojects
task install {
    subprojects.each { childP -> 
        if (!rootProject.skipMaven.contains(childP.parent.name+":"+childP.name)) {
            dependsOn.add(childP.install);
        }
    }
}

task wrapper(type: Wrapper, description: 'Creates and deploys the Gradle wrapper to the current directory.') {
    gradleVersion = '2.7'
}

// test reports
apply from: rootProject.file('gradle/scripts/testing.gradle')


// coverage support (jacoco/coveralls)
buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.1'
    }
}

apply from: rootProject.file('gradle/scripts/coverage.gradle')

// -- unused --

//task install() {
//    dependsOn subprojects.install
//}

//task mergedJavadoc(type: Javadoc, description: 'Creates Javadoc from all the projects.') {
//    title = 'All modules'
//    destinationDir = new File(project.buildDir, 'merged-javadoc')
//
//    // Note: The closures below are executed lazily.
//    source {
//       subprojects*.sourceSets*.main*.allSource
//    }
//    classpath.from {
//        subprojects*.configurations*.compile*.copyRecursive({ !(it instanceof ProjectDependency); })*.resolve()
//    }
//}


