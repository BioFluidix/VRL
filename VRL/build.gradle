//import org.gradle.api.artifacts.*

apply plugin: 'base' // To add "clean" task to the root project.

// define projects that shall not be deployed via maven
project.ext.set("skipMaven",["VRL-Lang:CommentParser","VRL-UI:NB-Sample"])

subprojects {
    apply from: rootProject.file('common.gradle')
    
    // Disable the test report for the individual test task
    test {
        reports.html.enabled = true
    }
}

task test(type: TestReport) {
    destinationDir = file("$buildDir/reports/tests/vrl")
    // Include the results from the `test` task in all subprojects
    reportOn subprojects*.test
}

subprojects {
    rootProject.test.dependsOn.add(test)
}

// calls maven install task of all subprojects
task install {
    subprojects.each { childP -> 
        if (!rootProject.skipMaven.contains(childP.parent.name+":"+childP.name)) {
            dependsOn.add(childP.install);
        }
    }
}


//task mergedJavadoc(type: Javadoc, description: 'Creates Javadoc from all the projects.') {
//    title = 'All modules'
//    destinationDir = new File(project.buildDir, 'merged-javadoc')
//
//    // Note: The closures below are executed lazily.
//    source {
//       subprojects*.sourceSets*.main*.allSource
//    }
//    classpath.from {
//        subprojects*.configurations*.compile*.copyRecursive({ !(it instanceof ProjectDependency); })*.resolve()
//    }
//}

task wrapper(type: Wrapper, description: 'Creates and deploys the Gradle wrapper to the current directory.') {
    gradleVersion = '2.1'
}

//task install() {
//    dependsOn subprojects.install
//}

